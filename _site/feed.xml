<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-05-02T01:58:55+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">개발 놀이터</title><author><name>진화하는 개발자</name></author><entry><title type="html">2022.05.01 TIL</title><link href="http://localhost:4000/til/TIL/" rel="alternate" type="text/html" title="2022.05.01 TIL" /><published>2022-05-01T00:00:00+09:00</published><updated>2022-05-01T00:00:00+09:00</updated><id>http://localhost:4000/til/TIL</id><content type="html" xml:base="http://localhost:4000/til/TIL/"><![CDATA[<p>오늘 한 것은 다음과 같다.</p>
<ul>
  <li>실용주의 프로그래머 1장 5절 ‘지식 포트폴리오’ 정독</li>
  <li>Linux에서 C 언어 개발에 필요한 패키지 설치</li>
</ul>]]></content><author><name>진화하는 개발자</name></author><category term="TIL" /><category term="TIL" /><category term="blog" /><summary type="html"><![CDATA[오늘 내가 한 것]]></summary></entry><entry><title type="html">C의 기초</title><link href="http://localhost:4000/c/cbasics/" rel="alternate" type="text/html" title="C의 기초" /><published>2022-05-01T00:00:00+09:00</published><updated>2022-05-01T00:00:00+09:00</updated><id>http://localhost:4000/c/cbasics</id><content type="html" xml:base="http://localhost:4000/c/cbasics/"><![CDATA[<p>오늘은 Linux 환경에서 C 프로그램을 작성하면서, C의 기초 구문에 대해 공부할 것이다. <a href="https://dojang.io/">코딩 도장</a>을 기준으로 진행할 예정이다.</p>

<h2 id="1-linux-환경에서-c-프로그램-작성-및-실행-1">1. Linux 환경에서 C 프로그램 작성 및 실행 [1]</h2>
<ul>
  <li>1) <code class="language-plaintext highlighter-rouge">$ sudo apt-get install build-essential</code>를 작성하여 필수적인 패키지를 다운로드 받는다.</li>
  <li>2) 적당한 C 프로그램을 만들어서 <code class="language-plaintext highlighter-rouge">.c</code> 확장자로 저장한다.</li>
  <li>3) <code class="language-plaintext highlighter-rouge">gcc [programName].c -o programName</code>을 터미널에서 실행하면, <code class="language-plaintext highlighter-rouge">programName</code>이라는 컴파일이 완료된 후 실행가능한 파일이 생긴다.</li>
  <li>4) <code class="language-plaintext highlighter-rouge">./programName</code>으로 실행가능한 파일을 실행한다.</li>
</ul>

<h2 id="2-적절한-에디터-사용">2. 적절한 에디터 사용</h2>
<ul>
  <li>나는 일단 VSCode에서 작업할 것이고, 기본 C/C++ Extension만 사용한다. 뭐 기초적인 수준이니까.</li>
</ul>

<h2 id="3-c-언어의-기초-문법">3. C 언어의 기초 문법</h2>
<h3 id="주석">주석</h3>
<ul>
  <li><code class="language-plaintext highlighter-rouge">//</code>: 한 줄 주석 (<code class="language-plaintext highlighter-rouge">//</code> 이후로 다)</li>
  <li><code class="language-plaintext highlighter-rouge">/* */</code>: 범위 주석 (<code class="language-plaintext highlighter-rouge">/*</code>와 <code class="language-plaintext highlighter-rouge">*/</code> 사이)</li>
</ul>

<h3 id="변수-선언-및-할당">변수 선언 및 할당</h3>
<p><code class="language-plaintext highlighter-rouge">int a;</code>과 같이 변수를 선언하고, <code class="language-plaintext highlighter-rouge">a = 1;</code>과 같이 값을 할당한다. <code class="language-plaintext highlighter-rouge">int a = 1;</code>처럼 선언과 동시에 할당할 수 있다. <code class="language-plaintext highlighter-rouge">int a = 1, b = 2;</code>와 같이 자료형이 같은 경우 동시에 할 수 있다.</p>

<h3 id="자료형">자료형</h3>
<p>정수 자료형은 char와 int가 있고, (signed), unsigned 그리고 short, long을 붙인다. 지금 당장 기억할 것은 char: 1바이트 (8비트, -128<code class="language-plaintext highlighter-rouge">~</code>127), int: 4바이트 (32비트,-2^31 <code class="language-plaintext highlighter-rouge">~</code> 2^31)라는 것이다.</p>

<h2 id="출처">출처</h2>
<p>[1] <a href="https://vitux.com/how-to-write-and-run-a-c-program-in-linux/">https://vitux.com/how-to-write-and-run-a-c-program-in-linux/</a></p>]]></content><author><name>진화하는 개발자</name></author><category term="C" /><category term="C" /><category term="linux" /></entry><entry><title type="html">2022.04.30 TIL</title><link href="http://localhost:4000/til/TIL/" rel="alternate" type="text/html" title="2022.04.30 TIL" /><published>2022-04-30T00:00:00+09:00</published><updated>2022-04-30T00:00:00+09:00</updated><id>http://localhost:4000/til/TIL</id><content type="html" xml:base="http://localhost:4000/til/TIL/"><![CDATA[<p>정말 오랜만이다!! 바쁜 대학 생활중에 돌아왔다. ㅎ 이제 대학 생활도 어느정도 틀이 잡힌 것 같으니 꾸준히 개발 블로그를 다시 운영하려 한다.
어제, 오늘 한 것은 다음과 같다.</p>
<ul>
  <li>실용주의 프로그래머 정독 및 내용 실천 방안</li>
  <li>새 노트북에 WLS2, git, VSCode 설치</li>
</ul>

<p>앞으로는 이런 것들을 해야 하겠다. 우선 순위는 향후 정하는 걸로.</p>
<ul>
  <li>Linux 운영체제에 대한 이해</li>
  <li>컴퓨터과학을 전공과목으로써 이해</li>
  <li>기존에 하던 것 (AI, C++ 등)</li>
</ul>]]></content><author><name>진화하는 개발자</name></author><category term="TIL" /><category term="TIL" /><category term="blog" /><summary type="html"><![CDATA[오늘 내가 한 것]]></summary></entry><entry><title type="html">WSL2 and Linux</title><link href="http://localhost:4000/links/WSL2/" rel="alternate" type="text/html" title="WSL2 and Linux" /><published>2022-04-30T00:00:00+09:00</published><updated>2022-04-30T00:00:00+09:00</updated><id>http://localhost:4000/links/WSL2</id><content type="html" xml:base="http://localhost:4000/links/WSL2/"><![CDATA[<h2 id="1-wsl2-링크">1. WSL2 링크</h2>
<p>WSL2는 Windows 환경에서 Linux를 가상머신 없이 사용할 수 있도록 한다. (나의 얄팍한 지식…) 사용해보니 정말 가상머신과는 비교가 안 되는 성능을 가지고 있다. 설명 대신 WSL2와 관련하여 내가 유용하게 찾은 링크들을 걸어놓겠다.</p>
<ul>
  <li><a href="https://docs.microsoft.com/en-us/windows/wsl/install">WSL2 설치: Microsoft 공식문서</a></li>
  <li><a href="https://www.lesstif.com/software-architect/wsl-2-windows-subsystem-for-linux-2-89555812.html">WSL2에 대한 lesstif님의 글</a></li>
</ul>

<h2 id="2-wsl-관련-linux-명령어-정리">2. WSL 관련 (Linux) 명령어 정리</h2>
<p>아무래도 Linux 환경에 익숙하지 않다 보니까 WSL2를 사용할 때 약간 헤맨다. Linux 환경에 대해 WSL2 사용에 필요한 만큼만 적어두자.</p>

<h3 id="linux-file-system">Linux File System</h3>
<p>Linux는 <code class="language-plaintext highlighter-rouge">/</code> (root directory)에서 파일구조가 시작된다. <code class="language-plaintext highlighter-rouge">/home</code> 또는 <code class="language-plaintext highlighter-rouge">~</code> 안에 User들의 폴더가 있고, 나의 경우 그 안에 <code class="language-plaintext highlighter-rouge">Projects</code> 폴더를 만들어 거기에 프로젝트를 저장하고 있다.</p>

<p>권한</p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">sudo</code>: 특정 작업은 특별한 권한이 필요하다. (Windows에서 관리자 권한 비슷한 느낌) 임의의 <code class="language-plaintext highlighter-rouge">command</code>를 <code class="language-plaintext highlighter-rouge">sudo</code> 권한으로 실행시키려면 <code class="language-plaintext highlighter-rouge">sudo command</code>하면 된다.</li>
</ul>

<p>파일 내비게이션</p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">cd</code>: change directory; 팁: <code class="language-plaintext highlighter-rouge">Tab</code>을 누르면 이름이 자동완성된다.</li>
  <li><code class="language-plaintext highlighter-rouge">pwd</code>: print working directory</li>
  <li><code class="language-plaintext highlighter-rouge">ls</code>: list; 폴더의 내용물 출력</li>
</ul>

<p>생성 및 삭제</p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">mkdir</code>: make directory</li>
  <li><code class="language-plaintext highlighter-rouge">rmdir</code>: remove directory (빈 경우만 가능)</li>
  <li><code class="language-plaintext highlighter-rouge">rm</code>: remove</li>
  <li><code class="language-plaintext highlighter-rouge">rm -r</code>: <code class="language-plaintext highlighter-rouge">-r</code> 옵션은 recursive로, 비어있지 않은 폴더의 내용물을 삭제해준다.</li>
</ul>

<p>파일 열기</p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">nano</code>: 일단 지금은 이걸로 간단한 편집 작업을 수행할 예정이다. <code class="language-plaintext highlighter-rouge">nano filename</code>처럼 수행하면 된다.</li>
  <li><code class="language-plaintext highlighter-rouge">code .</code>: 복잡한 작업은 VSCode로 진행할 예정이다. 뒤의 <code class="language-plaintext highlighter-rouge">.</code>은 현재 directory에서 열라는 이야기다.</li>
</ul>

<h3 id="wsl-시작-및-종료">WSL 시작 및 종료</h3>
<ul>
  <li>(Powershell에서 들어가자마자) <code class="language-plaintext highlighter-rouge">wsl</code>: wsl을 기본 배포판으로 시작한다.</li>
  <li>(<code class="language-plaintext highlighter-rouge">wsl</code>을 친 다음에) <code class="language-plaintext highlighter-rouge">cd ~</code>: 처음에 들어가면 Working Directory가 <code class="language-plaintext highlighter-rouge">/mnt/(윈도우 경로)</code>의 꼴로 되어있다. 일반적으로 WSL에서 굳이 Window 파일에 접속하려 하지는 않으므로 home으로 가준다.</li>
  <li>(WSL 실행중에) <code class="language-plaintext highlighter-rouge">exit</code>: 말 그대로 Linux Kernel에서 나간다. 평범한 Powershell로 돌아온다.</li>
  <li>(나간 평범한 Powershell에서) <code class="language-plaintext highlighter-rouge">wsl --shutdown</code>: 말 그대로 돌아가던 WSL을 종료한다.</li>
</ul>]]></content><author><name>진화하는 개발자</name></author><category term="links" /><category term="wsl" /><category term="wsl2" /></entry><entry><title type="html">2021.07.16 TIL</title><link href="http://localhost:4000/til/TIL/" rel="alternate" type="text/html" title="2021.07.16 TIL" /><published>2021-07-16T00:00:00+09:00</published><updated>2021-07-16T00:00:00+09:00</updated><id>http://localhost:4000/til/TIL</id><content type="html" xml:base="http://localhost:4000/til/TIL/"><![CDATA[<p>오랜만에 돌아왔다. 그 이유는 최근에 한 권으로 읽는 컴퓨터 구조와 프로그래밍이라는 책을 읽었기 때문이다. 오늘은 그 책을 다 읽고 독서록을 쓰고 관련해서 배울 점 등을 정리해보았다.
<a href="/books/the-secret-life-of-programs/">독서록 링크</a></p>

<p>그 외에도 C 프로그래밍 공부를 시작했다.
<a href="/c/c-start/">오늘 공부한 C 링크</a></p>]]></content><author><name>진화하는 개발자</name></author><category term="TIL" /><category term="TIL" /><category term="blog" /><summary type="html"><![CDATA[오늘 내가 한 것]]></summary></entry><entry><title type="html">C 프로그래밍 시작</title><link href="http://localhost:4000/c/c-start/" rel="alternate" type="text/html" title="C 프로그래밍 시작" /><published>2021-07-16T00:00:00+09:00</published><updated>2021-07-16T00:00:00+09:00</updated><id>http://localhost:4000/c/c-start</id><content type="html" xml:base="http://localhost:4000/c/c-start/"><![CDATA[<p><a href="https://www.tutorialspoint.com/cprogramming/index.htm">Tutorialspoint</a>의 강의로 C를 배우려고 한다.
오늘은 Hello World 출력하고 기본적인 개념을 배웠다.</p>

<h2 id="개념-정리">개념 정리</h2>
<ul>
  <li><code class="language-plaintext highlighter-rouge">;</code>: statement terminator</li>
  <li><code class="language-plaintext highlighter-rouge">/* */</code>: comments</li>
  <li>identifiers: name of variable/function etc.</li>
  <li>identifier naming rule: python과 동일. 처음에는 문자 + _, 그 다음에는 문자 + _ + 숫자</li>
  <li>keywords</li>
</ul>]]></content><author><name>진화하는 개발자</name></author><category term="C" /><category term="C" /><summary type="html"><![CDATA[시작이 반이다... 그런건가]]></summary></entry><entry><title type="html">한 권으로 읽는 컴퓨터 구조와 프로그래밍</title><link href="http://localhost:4000/books/the-secret-life-of-programs/" rel="alternate" type="text/html" title="한 권으로 읽는 컴퓨터 구조와 프로그래밍" /><published>2021-07-16T00:00:00+09:00</published><updated>2021-07-16T00:00:00+09:00</updated><id>http://localhost:4000/books/the-secret-life-of-programs</id><content type="html" xml:base="http://localhost:4000/books/the-secret-life-of-programs/"><![CDATA[<h1 id="한-권으로-읽는-컴퓨터-구조와-프로그래밍">한 권으로 읽는 컴퓨터 구조와 프로그래밍</h1>
<h1 id="the-secret-life-of-programs-understand-computers--craft-better-code">The Secret Life of Programs: Understand Computers – Craft Better Code</h1>

<p>저자: 조너선 스타인하트 (Jonathan E. Steinhart)</p>

<h2 id="읽게-된-계기">읽게 된 계기</h2>
<p>학교 세특에 쓸 개발 관련 책을 찾아보다가 백과사전식으로 컴퓨터 과학 전반을 훑는 책이 있어서 한번 읽어보았다. 이 책은 시스템 프로그래밍 (비트, 전자 회로, 메모리 등)부터 고급 주제 (병렬성, 보안, 인공지능), 그리고 팁과 경험담을 담고 있다.</p>

<h2 id="누구를-위한-책인가">누구를 위한 책인가?</h2>
<blockquote>
  <p>이 책은 프로그래밍을 배우고 있지만 깊이 부족으로 인해 불만족스러워하는 사람을 위한 책이다. 그리고 이미 프로그래밍을 배웠지만 프로그래밍과 컴퓨터에 대해 더 잘 알고 싶어하는 사람을 위한 책이기도 하다.</p>
</blockquote>

<h2 id="느낀점">느낀점</h2>
<p>균형이 잘 잡힌 책인것 같다. 이 책의 특장점은 컴퓨터 과학의 중심 개념들을 배경지식이 거의 전무한 사람도 읽을 수 있도록 정리해 두었다는 것이다. 그래서 읽으면서 새로운 개념들을 많이 접하게 되었고, 컴퓨터 과학의 landscape를 전반적으로 이해한 것 같다. 그러나 여기서 나오는 단점은 개념들을 완전히 정확하고 세밀하게 설명하고 있지는 않다는 것이다. (이는 저자도 인정하는 바이다) 그래서 이해의 수준이 관련된 글을 읽으면 더욱 빠르게 이해할 수는 있지만 그렇다고 내가 설명하지는 못하는 정도인 개념들이 상당히 많았다. 그래도 뭐 엄청나게 많은 개념들을 다뤘기 때문에 이 정도면 좋은 책인 것 같다.</p>

<h2 id="앞으로-더-배워보고-싶은-주제">앞으로 더 배워보고 싶은 주제</h2>
<ul>
  <li>C 프로그래밍</li>
  <li>운영체제</li>
</ul>]]></content><author><name>진화하는 개발자</name></author><category term="books" /><category term="books" /><category term="system programing" /><summary type="html"><![CDATA[The Secret Life of Programs: Understand Computers -- Craft Better Code]]></summary></entry><entry><title type="html">2021.07.10 TIL</title><link href="http://localhost:4000/til/TIL/" rel="alternate" type="text/html" title="2021.07.10 TIL" /><published>2021-07-10T00:00:00+09:00</published><updated>2021-07-10T00:00:00+09:00</updated><id>http://localhost:4000/til/TIL</id><content type="html" xml:base="http://localhost:4000/til/TIL/"><![CDATA[<p>좀 쓰기 그렇지만 오늘은 아무것도 안했다.
이 포스트는 그냥 친구가 준 자동 블로그 업로더를 시험해보기 위한 것이다. 구현해줘서 고맙다</p>]]></content><author><name>진화하는 개발자</name></author><category term="TIL" /><category term="TIL" /><category term="blog" /><summary type="html"><![CDATA[오늘 내가 한 것]]></summary></entry><entry><title type="html">2021.07.06 TIL</title><link href="http://localhost:4000/til/TIL/" rel="alternate" type="text/html" title="2021.07.06 TIL" /><published>2021-07-06T00:00:00+09:00</published><updated>2021-07-06T00:00:00+09:00</updated><id>http://localhost:4000/til/TIL</id><content type="html" xml:base="http://localhost:4000/til/TIL/"><![CDATA[<p>오늘은 블로그 정리를 주로 했다.</p>
<ul>
  <li>블로그에 트리 구조를 구현하면서 파이썬에서 클래스를 이용하여 트리 구조를 구현하는 방법을 익히게 되었다.</li>
  <li>Jekyll 에서 Page를 등록하고 메뉴를 만드는 방법을 알게 되었다.</li>
</ul>]]></content><author><name>진화하는 개발자</name></author><category term="TIL" /><category term="TIL" /><category term="blog" /><summary type="html"><![CDATA[오늘 내가 한 것]]></summary></entry><entry><title type="html">개발 관련 할 일</title><link href="http://localhost:4000/general/ideas/" rel="alternate" type="text/html" title="개발 관련 할 일" /><published>2021-07-05T00:00:00+09:00</published><updated>2021-06-15T00:00:00+09:00</updated><id>http://localhost:4000/general/ideas</id><content type="html" xml:base="http://localhost:4000/general/ideas/"><![CDATA[<p>여기는 개발 관련해서 해야 할 일들을 가볍게 정리하는 페이지이다.</p>
<ul>
  <li>개발 관련 대회/공모전 알아보기</li>
</ul>]]></content><author><name>진화하는 개발자</name></author><category term="general" /><category term="todo" /></entry></feed>